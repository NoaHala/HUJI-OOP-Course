noahalaly
322875832

questions:
1. Classes:
    a. in the new package 'exceptions_extension', i created 3 new classes that
        represent 3 types of exceptions (except the already existing 'IOException'):
            1. CharSetIsEmptyException - for cases in which the user asks to create
             the art with an empty charSet.
            2. OpenImageException - for cases in which a problem occurred while the
             program attempted to process the given image path.
            3. ResOutOfBoundException - for cases in which the user tries to change
             the resolution of the art to an invalid one (according to the current
              image size)
         all those classes extend the class 'Exception', and used in the class 'Shell'.
    b. the package 'ascii_output' (fully given in the exercise's supplied materials),
        contains the interface 'AsciiOutput' and 2 classes that implement it -
         'HtmlAsciiOutput', 'ConsoleAsciiOutput'. the interface is being used as a type
          of field ('contains') in 'Shell'.
    c. the package 'image', includes the classes:
        1. 'Image' (given in the exercise's supplied materials) - used in
         'ImageProcessHelperMethods' and as a field ('contains') in 'AsciiArtAlgorithm
          and in 'Shell'.
        2. 'ImageProcessHelperMethods', that contains 3 static methods for 3
         different functionalities in the ascii art process - padding images,
         splitting images to sub-images by given resolution and calculating image
         brightness. those methods are being called at 'AsciiArtAlgorithm' or at 'Shell'.
    d. the package 'image_char_matching', includes the classes:
        1. 'CharConverter' (given in the exercise's supplied materials) - used in
         'SubImgCharMatcher'.
        2. 'SubImgCharMatcher' - function as required in the exercise's instructions.
         this class is being used as a field ('contains') in 'AsciiArtAlgorithm' and in
         'Shell'.
    e. the package 'ascii_art', includes the classes:
        1. 'shell' - function as required in the exercise's instructions. includes the
         'main' function.
        2. 'AsciiArtAlgorithm' - function as required in the exercise's instructions.
         this class is being used as a field ('contains') in 'Shell'.
        3. 'ascii_art.KeyboardInput' (given in the exercise's supplied materials) - used in
         'shell'.

2. Data Structures:
    a. in 'SubImgCharMatcher' i needed to be able to:
        1. access efficiently to the characters in the charSet + iterate over them
         in a specific order + save and get a brightness value of a char. for those
         purposes i've found the TreeMap, as the best data structure.
        2. access efficiently to the brightness values/ normalize brightness values
         of the characters in the charSet by char + get the closest value to a given
         double. for those purposes i've found the TreeMap, as the best data
         structure too.
    b. in 'AsciiArtAlgorithm' i needed to be able to access efficiently to the
     characters in the charSet and their matching brightness value. for those purposes
      i've found the HashMap, as the best data structure.

3. Exceptions:
    for each problematic situation in which the program should print an error message,
    the sub-method that catch the problem throws the relevant exception*. the method
    that catch all the exception in 'run' at tha 'Shell' class. according to what error
    it caught, 'run' prints the relevant error message.

    * all the problems originating from an incorrect command format throws an
     IOException. for other problems there are 3 new exception classes (as described
     in question number 1).

4. changes at the API of 'SubImgCharMatcher':
   in my implementation, the 'SubImgCharMatcher' object at 'AsciiArtAlgorithm' and
   'Shell' is the only object that in charge of managing the CharSet and its data
   structures. so, i added the methods 'printAllChars' and 'isEmpty', that prints all
   the chars by order or checks if the charSet is empty to fill the missing needs.




